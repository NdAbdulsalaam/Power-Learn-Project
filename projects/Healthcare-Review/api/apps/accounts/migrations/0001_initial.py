# Generated by Django 3.1.7 on 2021-04-08 20:16

import apps.accounts.helpers
import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone
import imagekit.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "password",
                    models.CharField(max_length=128, verbose_name="password"),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        verbose_name="email address",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="date joined",
                    ),
                ),
                ("username", models.CharField(max_length=30, unique=True)),
                ("birthday", models.DateField(default=None, null=True)),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[
                            (None, "Select your gender"),
                            ("M", "Male"),
                            ("F", "Female"),
                        ],
                        default=None,
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "occupation",
                    models.CharField(
                        blank=True,
                        choices=[
                            (None, "Select your role"),
                            ("Student", "Student"),
                            ("PhD Student", "PhD Student"),
                            ("Assistant", "Assistant"),
                            ("Researcher", "Researcher"),
                            ("Assistant Professor", "Assistant Professor"),
                            ("Associate Professor", "Associate Professor"),
                            ("Professor", "Professor"),
                            ("Head of Department", "Head of Department"),
                            ("Head of Faculty", "Head of Faculty"),
                            ("Head of Laboratory", "Head of Laboratory"),
                            ("Vice Rector", "Vice Rector"),
                            ("Rector", "Rector"),
                            ("Software Developer", "Software Developer"),
                            ("Engineer", "Engineer"),
                            ("Technician", "Technician"),
                            ("Economist", "Economist"),
                            ("Lawyer", "Lawyer"),
                            ("Instructor", "Instructor"),
                            ("Consultant", "Consultant"),
                            ("Manager", "Manager"),
                            ("Administrator", "Administrator"),
                            ("Analyst", "Analyst"),
                            ("Journalist", "Journalist"),
                            ("Writer", "Writer"),
                            ("Editor", "Editor"),
                            ("Librarian", "Librarian"),
                            ("Vice Director", "Vice Director"),
                            (
                                "Chief Executive Officer",
                                "Chief Executive Officer",
                            ),
                            ("Retired", "Retired"),
                            ("Other", "Other"),
                        ],
                        default=None,
                        max_length=30,
                        null=True,
                    ),
                ),
                (
                    "avatar",
                    imagekit.models.fields.ProcessedImageField(
                        blank=True,
                        default=None,
                        null=True,
                        upload_to=apps.accounts.helpers.upload_to_user_avatar_directory,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "db_table": "user",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
